---
import "../styles/global.css";
import { SITE_TITLE } from "../consts";
import FallbackImage from "../assets/favicon.jpg";
import type { ImageMetadata } from "astro";
import { SEO } from "astro-seo";

interface Props {
  title: string;
  description: string;
  image?: ImageMetadata;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = FallbackImage } = Astro.props;
---

<script is:inline>
  (function () {
    try {
      const mode = localStorage.getItem("mode") || "light";
      const theme = localStorage.getItem("color-theme") || "concord";
      document.documentElement.setAttribute("data-mode", mode);
      document.documentElement.setAttribute("data-theme", theme);
      document.documentElement.classList.remove("light", "dark");
      document.documentElement.classList.add(mode);
    } catch (e) {
      document.documentElement.setAttribute("data-mode", "light");
      document.documentElement.setAttribute("data-theme", "concord");
      document.documentElement.classList.add("light");
    }
  })();
</script>

<meta charset="UTF-8" />

<SEO
  title={title}
  description={description}
  canonical={canonicalURL.toString()}
  openGraph={{
    basic: {
      title,
      type: "website",
      image: image?.src ? new URL(image.src, Astro.site).toString() : "",
      url: canonicalURL.toString(),
    },
  }}
  extend={{
    link: [
      { rel: "icon", href: "/favicon.jpg" },
      { rel: "sitemap", href: "/sitemap-index.xml" },
      {
        rel: "alternate",
        type: "application/rss+xml",
        title: SITE_TITLE,
        href: new URL("rss.xml", Astro.site).toString(),
      },
      { rel: "canonical", href: canonicalURL.toString() },
    ],
    meta: [{ name: "generator", content: Astro.generator }],
  }}
/>
